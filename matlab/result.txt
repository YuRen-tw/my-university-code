>> help NumDiff
  NumDiff(Y, X, ith [, pt, direct, step])
    Compute f'(x_i).
 
  Parameters:
    Y      : Y = [y_1 ... y_n] = [f(x_1) ... f(x_n)]
    X      : one of the following
        1) X = [x_1 ... x_n] (must be increasing)
        2) X = x_2 - x_1
    ith    : the index of x_i
    pt     : 3 or 5, 3-point or 5-point methods
    direct : 0 (midpoint), 1 (forward endpoint), -1 (backward endpoint)
    step   : step > 0, increment between indices of points
                                    1 2 3 4 5 6
    NumDiff(1:6, X, 3)          : [ o o x o o - ]
    NumDiff(1:6, X, 2)          : [ o x o - - - ]
    NumDiff(1:6, X, 1)          : [ x o o o o - ]
    NumDiff(1:6, X, 1, 3)       : [ x o o - - - ]
    NumDiff(1:6, X, 3, 3, 1)    : [ - - x o o - ]
    NumDiff(1:6, X, 3, 3, 0, 2) : [ o - x - o - ]
 
  Examples:
  >> f = @(x) 2*x^3 + 4*x^2 + 3*x;
  >> X = 5 + (-2:2) * 0.3;
  >> Y = arrayfun(f, X);
  >> NumDiff(Y, X, 3)
  ans =
    193.0000

>> help showNumDiff
  4.2  Example 2
  Example of NumDiff

>> showNumDiff
-----
Three-point endpoint with h= 0.1: 22.032310, error = 0.134858
Three-point endpoint with h=-0.1: 22.054525, error = 0.112643
Three-point midpoint with h= 0.1: 22.228790, error = 0.061622
Three-point midpoint with h= 0.2: 22.414163, error = 0.246995
 Five-point midpoint with h= 0.1: 22.166999, error = 0.000169
-----
>> 